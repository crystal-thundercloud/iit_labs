#include <stdio.h>
#include <math.h>
#include <iostream>
using namespace std;

float PowerA3(float a){
    float b=a*a*a;
    return b;
}

int Sign(int x) {
    int j = (x==0)? 0 : ((x<0)? -1 : 1);
    return j;
}

float Rings(float r1, float r2) {
    return abs((M_PI*r1*r1)-(M_PI*r2*r2));
}

int Quarter(float x, float y) {
    int j;
    if (x>0) j = (y>0)? 1: 4;
    else j = (y>0)? 2: 3;
    return j;
}

float Fact2(int n) {
    float j = 1;
    float i = (n%2==0)? 0 : 1;
    for (i; i<=n; i+=2) {
        if (i!=0) j*=i;
    }
    return j;
}

int main()
{

/*
Описать функцию PowerA3(A, B), вычисляющую третью степень числа A и возвращающую ее в переменной B
(A — входной, B — выходной параметр; оба параметра являются вещественными).
С помощью этой функции найти третьи степени пяти данных чисел.
*/

float a, b;

cout<<R"(Описать функцию PowerA3(A, B), вычисляющую третью степень числа A и возвращающую ее в переменной B
(A — входной, B — выходной параметр; оба параметра являются вещественными).
С помощью этой функции найти третьи степени пяти данных чисел.)"<<"\n"<<endl;

for (int i=1; i<=5; i++) {
    cout<<"Введите число "<<i<<" : ";
    cin>>a;
    cout<<a<<"^3 = "<<PowerA3(a)<<endl;
}

/*
Описать функцию Sign(X) целого типа, возвращающую для вещественного числа X следующие значения:
−1, если X < 0; 0, если X = 0; 1, если X > 0. 
С помощью этой функции найти значение выражения Sign(A) + Sign(B) для данных вещественных чисел A и B.
*/

cout<<"\n"<<R"(Описать функцию Sign(X) целого типа, возвращающую для вещественного числа X следующие значения:
−1, если X < 0; 0, если X = 0; 1, если X > 0. 
С помощью этой функции найти значение выражения Sign(A) + Sign(B) для данных вещественных чисел A и B.)"<<"\n"<<endl;

cout<<"Введите число A: ";
cin>>a;

cout<<"Введите число B: ";
cin>>b;

cout<<Sign(a)+Sign(b)<<endl;

/*
Описать функцию RingS(R1, R2) вещественного типа, находящую площадь кольца, заключенного между
двумя окружностями с общим центром и радиусами R1 и R2 (R1 и R2 — вещественные, R1 > R2).
С ее помощью найти площади трех колец, для которых даны внешние и внутренние радиусы.
*/

cout<<"\n"<<R"(Описать функцию RingS(R1, R2) вещественного типа, находящую площадь кольца, заключенного между
двумя окружностями с общим центром и радиусами R1 и R2 (R1 и R2 — вещественные, R1 > R2).
С ее помощью найти площади трех колец, для которых даны внешние и внутренние радиусы.)"<<"\n"<<endl;

for (int i=1; i<=3; i++) {
    cout<<"Введите первый радиус: ";
    cin>>a;
    cout<<"Введите второй радиус: ";
    cin>>b;
    cout<<"Площадь кольца = "<<Rings(a, b)<<endl;
}

/*
Описать функцию Quarter(x, y) целого типа, определяющую номер координатной четверти,
в которой находится точка с ненулевыми вещественными координатами (x, y).
С помощью этой функции найти номера координатных четвертей для трех точек с данными ненулевыми координатами
*/

cout<<"\n"<<R"(Описать функцию Quarter(x, y) целого типа, определяющую номер координатной четверти,
в которой находится точка с ненулевыми вещественными координатами (x, y).
С помощью этой функции найти номера координатных четвертей для трех точек с данными ненулевыми координатами)"<<"\n"<<endl;

for (int i=1; i<=3; i++) {
    cout<<"Введите первую координату: ";
    cin>>a;
    cout<<"Введите вторую координату: ";
    cin>>b;
    cout<<"Точка с координатами ("<<a<<";"<<b<<") находится в "<<Quarter(a, b)<<" четверти."<<endl;
}

/*
Описать функцию Fact2(N) вещественного типа, вычисляющую двойной факториал: 
N!! = 1·3·5·. . .·N, если N — нечетное; N!! = 2·4·6·. . .·N, если N — четное
(N > 0 — параметр целого типа; вещественное возвращаемое значение используется для того,
чтобы избежать целочисленного переполнения при больших значениях N).
*/

cout<<"\n"<<R"(Описать функцию Fact2(N) вещественного типа, вычисляющую двойной факториал: 
N!! = 1·3·5·. . .·N, если N — нечетное; N!! = 2·4·6·. . .·N, если N — четное
(N > 0 — параметр целого типа; вещественное возвращаемое значение используется для того,
чтобы избежать целочисленного переполнения при больших значениях N).)"<<"\n"<<endl;

cout<<"Введите число: ";
cin>>a;

cout<<"Двойной факториал числа "<<a<<" = "<<Fact2(a)<<endl;

}
