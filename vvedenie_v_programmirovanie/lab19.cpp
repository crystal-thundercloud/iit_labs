#include <stdio.h>
#include <iostream>
#include <vector>
using namespace std;

int main()
{

/*
Дан целочисленный массив размера N. Удалить из массива все соседние одинаковые элементы, оставив их первые вхождения.
*/

cout<<R"(Дан целочисленный массив размера N. Удалить из массива все соседние одинаковые элементы, оставив их первые вхождения.)"<<"\n"<<endl;

int n;

cout<<"Введите размер массива: ";
cin>>n;

vector <int> a1(n);

cout<<"Введите элементы массива: ";
for (int i=0; i<n; i++) {
    cin>>a1[i];
}

auto bgn1 = a1.cbegin();

for (int i=0; i<a1.size()-1; i++) {
    bgn1 = a1.cbegin();
    if (a1[i]==a1[i+1]) {
        a1.erase(bgn1+i+1);
        i--;
    }
}

for (int i=0; i<a1.size(); i++) {
    cout<<"\n"<<a1[i];
}

cout<<endl;

/*
Дан целочисленный массив размера N. Удалить из массива все элементы, встречающиеся ровно два раза,
и вывести размер полученного массива и его содержимое.
*/

cout<<"\n"<<R"(Дан целочисленный массив размера N. Удалить из массива все элементы, встречающиеся ровно два раза,
и вывести размер полученного массива и его содержимое.)"<<"\n"<<endl;

cout<<"Введите размер массива: ";
cin>>n;

vector <int> a2(n);

cout<<"Введите элементы массива: ";
for (int i=0; i<n; i++) {
    cin>>a2[i];
}

int j, k, m, temp;
auto bgn = a2.cbegin();

for (int i=0; i<a2.size(); i++) {
    k = 0;
    temp = a2[i];
    bgn = a2.cbegin();
    for (j=0; j<a2.size(); j++) {
        if (j!=i) { //чтобы не сравнивал элемент с самим собой
            if (temp==a2[j]) {
                k++;
                m = j;
            }
        }
    }
    if (k==1) {
        a2.erase(bgn+m);
        a2.erase(bgn+i);
    }
}

cout<<"Изменённый массив: ";
for (int i=0; i<a2.size(); i++) {
    cout<<"\n"<<a2[i];
}

cout<<endl;

/*
Дан массив размера N.
Вставить элемент с нулевым значением перед минимальным и после максимального элемента массива.
*/

cout<<"\n"<<R"(Дан массив размера N.
Вставить элемент с нулевым значением перед минимальным и после максимального элемента массива.)"<<"\n"<<endl;

cout<<"Введите размер массива: ";
cin>>n;

vector <float> a3(n);

cout<<"Введите элементы массива: ";
for (int i=0; i<n; i++) {
    cin>>a3[i];
}

int min=0, max=0;
auto bgn3 = a3.cbegin();

for (int i=0; i<a3.size(); i++) {
    if (a3[i]<a3[min]) min=i;
    if (a3[i]>a3[max]) max=i;
}

/* переназначаем указатель на начало вектора после вставки,
потому что он становится неактуальным и выдаёт предупреждение
double free or corruption */

if (min<max) {
    a3.insert(bgn3+max+1, 0);
    bgn3 = a3.cbegin();
    a3.insert(bgn3+min, 0);
}

else {
    a3.insert(bgn3+max+1, 0);
    bgn3 = a3.cbegin();
    a3.insert(bgn3+min+1, 0);
}

cout<<"Изменённый массив: ";
for (int i=0; i<a3.size(); i++) {
    cout<<"\n"<<a3[i];
}

cout<<endl;

/*
Дан массив размера N.
Вставить элемент с нулевым значением перед минимальным и после максимального элемента массива.
*/

cout<<"\n"<<R"(Дан массив размера N. После каждого отрицательного элемента массива вставить элемент с нулевым значением.)"<<"\n"<<endl;

cout<<"Введите размер массива: ";
cin>>n;

vector <float> a4(n);

cout<<"Введите элементы массива: ";
for (int i=0; i<n; i++) {
    cin>>a4[i];
}

auto bgn4 = a4.cbegin();

cout<<"Изменённый массив: ";
for (int i=0; i<a4.size(); i++) {
    bgn4 = a4.cbegin();
    if (a4[i]<0) a4.insert(bgn4+i+1, 0);
    cout<<"\n"<<a4[i];
}

/*
Дан массив размера N. Перед каждым положительным элементом массива вставить элемент с нулевым значением.
*/

cout<<"\n"<<R"(Дан массив размера N. Перед каждым положительным элементом массива вставить элемент с нулевым значением.)"<<"\n"<<endl;

cout<<"Введите размер массива: ";
cin>>n;

vector <float> a5(n);

cout<<"Введите элементы массива: ";
for (int i=0; i<n; i++) {
    cin>>a5[i];
}

auto bgn5 = a5.cbegin();

cout<<"Изменённый массив: ";
for (int i=0; i<a5.size(); i++) {
    bgn5 = a5.cbegin();
    if (a5[i]>0) {
        a5.insert(bgn5+i, 0);
        i++; //а то будет вечный цикл :D
    }
}

for (int i=0; i<a5.size(); i++) {
    cout<<"\n"<<a5[i];
}

}
