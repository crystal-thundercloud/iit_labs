/*
Дано целое число в диапазоне 1–40, определяющее количество учебных заданий по некоторой теме.
Вывести строку-описание указанного количества заданий, обеспечив правильное согласование числа
со словами «учебное задание», например: 18 — «восемнадцать учебных заданий».
+
Дано целое число в диапазоне 100–999. Вывести строку-описание данного числа,
например: 256 — «двести пятьдесят шесть», 814 — «восемьсот четырнадцать».
*/

cout<<R"(Дано целое число в диапазоне 10–40, определяющее количество учебных заданий по некоторой теме.
Вывести строку-описание указанного количества заданий, обеспечив правильное согласование числа
со словами «учебное задание», например: 18 — «восемнадцать учебных заданий».
+
Дано целое число в диапазоне 100–999. Вывести строку-описание данного числа,
например: 256 — «двести пятьдесят шесть», 814 — «восемьсот четырнадцать».)"<<endl;

cout<<"Введите целое число от 1 до 999: ";
cin>>N;

/////////////////////////////////////////////////////////////////////////////////////////////////////////BEFORE

string numbers[1000] = {"одно", "два", "три", "четыре", "пять", "шесть", "семь", "восемь", "девять",
"десять", "одиннадцать", "двенадцать", "тринадцать", "четырнадцать", "пятнадцать", "шестнадцать",
"семнадцать", "восемнадцать", "девятнадцать"};
numbers[20] = "двадцать"; numbers[30] = "тридцать"; numbers[40] = "сорок"; numbers[50] = "пятьдесят";
numbers[60] = "шестьдесят"; numbers[70] = "семьдесят"; numbers[80] = "восемьдесят"; numbers[90] = "девяносто";

string answer, tasks[] = {" задание", " задания", " заданий"};

answer = (N>=10)? ((N>=10&&N<20)? numbers[N-1]+tasks[2] : ((N/10>1)? numbers[(N/10)*10] : "")) : numbers[N-1];
answer += (N>20&&N%10>0)? " "+numbers[(N%10)-1] : "";
answer += (N<10||N>=20)? ((N%10==1)? tasks[0] : ((N%10>1&&N%10<5)? tasks[1] : tasks[2])) : "";

cout<<answer<<endl;

/////////////////////////////////////////////////////////////////////////////////////////////////////////AFTER

string numbers[1000] = {"одно", "два", "три", "четыре", "пять", "шесть", "семь", "восемь", "девять",
"десять", "одиннадцать", "двенадцать", "тринадцать", "четырнадцать", "пятнадцать", "шестнадцать",
"семнадцать", "восемнадцать", "девятнадцать"};
numbers[20] = "двадцать"; numbers[30] = "тридцать"; numbers[40] = "сорок"; numbers[50] = "пятьдесят";
numbers[60] = "шестьдесят"; numbers[70] = "семьдесят"; numbers[80] = "восемьдесят"; numbers[90] = "девяносто";
numbers[100] = "сто"; numbers[200] = "двести"; numbers[300] = "триста"; numbers[400] = "четыреста"; numbers[500] = "пятьсот"; 
numbers[600] = "шестьсот"; numbers[700] = "семьсот"; numbers[800] = "восемьсот"; numbers[900] = "девятьсот"; 

string answer, tasks[] = {" задание", " задания", " заданий"};

answer  = (N>=100)? ((N>=100&&N<120)? numbers[(N/100)*100] : ((N/100>=1)? numbers[(N/100)*100] : "")) : "";
N = N%100;
answer += (N>=10)? ((N>=10&&N<20)? " "+numbers[N-1]+tasks[2] : ((N/10>1)? " "+numbers[(N/10)*10] : "")) : " "+numbers[N-1];
answer += (N>20&&N%10>0)? " "+numbers[(N%10)-1] : "";
answer += (N<10||N>=20)? ((N%10==1)? tasks[0] : ((N%10>1&&N%10<5)? tasks[1] : ((N%100==0)? "" : tasks[2]))) : "";

cout<<answer<<endl;
